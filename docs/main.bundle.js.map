{"version":3,"sources":["webpack:///./src async","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/sudoku-load/sudoku-load.component.css","webpack:///./src/app/sudoku-load/sudoku-load.component.html","webpack:///./src/app/sudoku-load/sudoku-load.component.ts","webpack:///./src/app/sudoku.mock.ts","webpack:///./src/app/sudoku/sudoku.component.css","webpack:///./src/app/sudoku/sudoku.component.html","webpack:///./src/app/sudoku/sudoku.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,iD;;;;;;;ACNA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,8C;;;;;;;;;;;;;;;;ACA0C;AAO1C,IAAa,YAAY;IALzB;QAME,UAAK,GAAG,mBAAmB,CAAC;IAC9B,CAAC;IAAD,mBAAC;AAAD,CAAC;AAFY,YAAY;IALxB,wFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,6DAAmC;QACnC,4DAAkC;KACnC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACa;AACc;AACR;AAclE,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAZrB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,iFAAe;YACf,+FAAmB;SACpB;QACD,OAAO,EAAE;YACP,gFAAa,EAAE,mEAAW,EAAE,2EAAmB;SAChD;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;ACpBtB;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wlCAAwlC,cAAc,6C;;;;;;;;;;;;;;;;;;;;ACM/kC;AAEuB;AAO9C,IAAa,mBAAmB;IAI9B;QAFU,gBAAW,GAAG,IAAI,mEAAY,EAAQ,CAAC;QACjD,aAAQ,GAAgB,EAAE,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,kEAAY,CAAC;IAC/B,CAAC;IAED,0CAAY,GAAZ,UAAa,KAAK;QAChB,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxD,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,MAAM,CAAC,MAAM,GAAG;gBACd,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC1B,YAAY;gBACZ,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;YACzC,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,0BAA0B;IAC1B,mCAAmC;IACnC,IAAI;IACJ,yBAAyB;IACzB,6BAA6B;IAC7B,mDAAmD;IACnD,gDAAgD;IAChD,6CAA6C;IAC7C,mCAAmC;IACnC,oDAAoD;IACpD,sCAAsC;IACtC,+CAA+C;IAC/C,4CAA4C;IAC5C,iDAAiD;IACjD,0CAA0C;IAC1C,mDAAmD;IACnD,yCAAyC;IACzC,8CAA8C;IAC9C,gCAAgC;IAChC,UAAU;IACV,kCAAkC;IAClC,QAAQ;IACR,MAAM;IAEN,yCAAW,GAAX,UAAY,OAAe,EAAE,QAAgB;QAC3C,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC9C,wCAAwC;QACxC,IAAI,GAAG,GAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAChD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7C,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,YAAY;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,6CAAe,GAAtB,UAAuB,WAAmB;QACxC,IAAM,OAAO,GAAG,kEAAY,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,WAAW,EAAtB,CAAsB,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IACH,0BAAC;AAAD,CAAC;AAlEyB;IAAvB,wFAAS,CAAC,WAAW,CAAC;kDAAY,iEAAU,oBAAV,iEAAU;sDAAC;AACpC;IAAT,oFAAM,EAAE;;wDAAwC;AAFtC,mBAAmB;IAL/B,wFAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,iFAA2C;QAC3C,gFAA0C;KAC3C,CAAC;;GACW,mBAAmB,CAmE/B;AAnE+B;;;;;;;;;;;ACbhC;AAAA;IAAA;IAQA,CAAC;IAAD,gBAAC;AAAD,CAAC;;AAPS,cAAI,GAAG,MAAM,CAAC;AACd,yBAAe,GAAG,sBAAsB,CAAC;AACzC,4BAAkB,GAAG,yBAAyB,CAAC;AAC/C,oCAA0B,GAAG,oCAAoC,CAAC;AAClE,uCAA6B,GAAG,qCAAqC,CAAC;AACtE,qBAAW,GAAG,eAAe,CAAC;AAC9B,kBAAQ,GAAG,WAAW,CAAC;AAG1B,IAAM,YAAY,GAAgB;IACvC;QACE,IAAI,EAAE,SAAS,CAAC,IAAI;QACpB,OAAO,EAAE,EAAE;KACZ;IACD;QACE,IAAI,EAAE,SAAS,CAAC,QAAQ;QACxB,OAAO,EAAE;YACP,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;SACZ;KACF;IAED;QACE,IAAI,EAAE,SAAS,CAAC,WAAW;QAC3B,OAAO,EAAE;YACP,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;SACZ;KACF;IACD;QACE,IAAI,EAAE,SAAS,CAAC,6BAA6B;QAC7C,OAAO,EAAE;YACP,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;SACZ;KACF;IAED;QACE,IAAI,EAAE,SAAS,CAAC,eAAe;QAC/B,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;KACpC;IACD;QACE,IAAI,EAAE,SAAS,CAAC,kBAAkB;QAClC,OAAO,EAAE;YACP,YAAY;YACZ,WAAW;YACX,YAAY;YACZ,UAAU;YACV,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;SACZ;KACF;IACD;QACE,IAAI,EAAE,SAAS,CAAC,0BAA0B;QAC1C,OAAO,EAAE;YACP,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;SACZ;KACF;CACF,CAAC;;;;;;;;AC7FF;AACA;;;AAGA;AACA,sCAAuC,4BAA4B,KAAK,2BAA2B,qCAAqC,KAAK,kBAAkB,gCAAgC,uBAAuB,KAAK,4BAA4B,oCAAoC,KAAK,2BAA2B,mCAAmC,KAAK,6BAA6B,iBAAiB,KAAK,yBAAyB,mBAAmB,KAAK;;AAEvc;;;AAGA;AACA,2C;;;;;;;ACXA,mgCAAmgC,YAAY,scAAsc,+BAA+B,KAAK,IAAI,KAAK,gJAAgJ,iGAAiG,+RAA+R,sCAAsC,uE;;;;;;;;;;;;;;;;;;;ACAtgE;AAQlD,IAAa,eAAe;IAI1B;QAFA,gBAAW,GAAkB,EAAE,CAAC;QAChC,cAAS,GAAc,EAAE,CAAC;IACX,CAAC;IAEhB,kCAAQ,GAAR,cAAY,CAAC;IAEb,uCAAa,GAAb,UAAc,GAAU;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,2CAAiB,GAAjB,UAAkB,GAAS;QAA3B,iBAiCC;QAhCC,IAAM,MAAM,GAAG,kBAAkB,CAAC;QAClC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAChB,MAAM,oDACP,GAAG,CAAC,OAAO,CAAC,MACZ,CACH,CAAC;QACJ,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;gBAC7B,IAAM,SAAS,GAAW,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;gBAC5C,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,CAAC,WAAW,CAAC,IAAI,CAChB,MAAM,iBAAW,KAAK;wBACvB,CAAC,oDAA8C,SAAW,CAC7D,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;gBAC7B,IAAM,aAAa,GAAW,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAC/D,mCAAmC;gBACnC,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAChB,MAAM,iBAAW,KAAK;wBACvB,CAAC,+DAAyD,aAAe,CAC5E,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,6CAAmB,GAAnB,UAAoB,SAAoB;QAAxC,iBAmEC;QAlEC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,IAAM,gBAAgB,GAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpE,IAAM,cAAc,GAAG,UAAC,GAAG,EAAE,CAAC,IAAK,UAAG,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,EAAlB,CAAkB,CAAC;QACtD,IAAM,aAAa,GAAG,CAAC,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,QAAQ;gBACnC,GAAG,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,SAAS;oBAC1B,EAAE,CAAC,CACD,CAAC,gBAAgB,CAAC,QAAQ,CACxB,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAE7C,CAAC,CAAC,CAAC;wBACD,IAAM,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;wBAC5D,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;wBACpD,KAAI,CAAC,WAAW,CAAC,IAAI,CACnB,uBAAoB,QAAQ,GAAG,CAAC,oBAAa,SAAS;4BACpD,CAAC,sBAAgB,SAAS,kDAA+C,CAC5E,CAAC;oBACJ,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,gBAAgB,CAAC,OAAO,CAAC,UAAC,eAAe,EAAE,KAAK;gBAC9C,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,QAAQ;oBACnC,IAAM,YAAY,GAAiB,GAAG,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,SAAS;wBAC5D,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,eAAe,CAAC;oBACxC,CAAC,CAAC,CAAC;oBACH,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC5B,YAAY,CAAC,OAAO,CAAC,mBAAS;4BAC5B,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;wBAC5B,CAAC,CAAC,CAAC;wBACH,KAAI,CAAC,WAAW,CAAC,IAAI,CACnB,iCAA8B,QAAQ;4BACpC,CAAC,+BAAyB,eAAiB,CAC9C,CAAC;oBACJ,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,GAAG,CAAC,CAAC,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,aAAa,EAAE,WAAW,EAAE,EAAE,CAAC;oBACrE,YAAY;oBACZ,IAAM,WAAW,GAAG,cAAc,CAAC,KAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;oBAEhE,IAAM,YAAY,GAAiB,WAAW,CAAC,MAAM,CACnD,UAAC,IAAI,EAAE,SAAS;wBACd,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,eAAe,CAAC;oBACxC,CAAC,CACF,CAAC;oBACF,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC5B,YAAY,CAAC,OAAO,CAAC,mBAAS;4BAC5B,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;wBAC5B,CAAC,CAAC,CAAC;wBACH,KAAI,CAAC,WAAW,CAAC,IAAI,CACnB,oCAAiC,WAAW;4BAC1C,CAAC,+BAAyB,eAAiB,CAC9C,CAAC;oBACJ,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,8CAAoB,GAApB,UAAqB,GAAS;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QACD,IAAM,GAAG,GAAc,EAAE,CAAC;QAC1B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,QAAQ;YAChC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACjB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;YACnB,YAAY;YACZ,GAAG,CAAC,CAAC,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC;gBAC5D,IAAM,SAAS,GAAW,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACjD,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YACjE,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACH,sBAAC;AAAD,CAAC;AA5IY,eAAe;IAL3B,wFAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,uEAAsC;QACtC,sEAAqC;KACtC,CAAC;;GACW,eAAe,CA4I3B;AA5I2B;;;;;;;;;;ACRrB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;;;;;;;;;;;;;;ACF6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE;KACvB,eAAe,CAAC,kEAAS,CAAC;KAC1B,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = ./src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = 1","module.exports = \"<app-sudoku></app-sudoku>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sudoku tester app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SudokuComponent } from './sudoku/sudoku.component';\nimport { SudokuLoadComponent } from './sudoku-load/sudoku-load.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SudokuComponent,\n    SudokuLoadComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sudoku-load/sudoku-load.component.css\n// module id = ./src/app/sudoku-load/sudoku-load.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"form-group row\\\">\\n  <label class=\\\"col-sm-2 col-form-label\\\">Sample File</label>\\n  <div class=\\\"col-sm-3\\\">\\n      <!-- https://help.data.world/hc/en-us/articles/115006300048-GitHub-how-to-find-the-sharable-download-URL-for-files-on-GitHub -->\\n    <a href=\\\"https://raw.githubusercontent.com/SergeyMalykh/sudoku-tester/master/input_sudoku.txt\\\" target=\\\"_blank\\\">input_sudoku.txt</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"form-group row\\\">\\n  <label class=\\\"col-sm-2 col-form-label\\\">Upload File</label>\\n  <div class=\\\"col-sm-3\\\">\\n    <input type=\\\"file\\\" id=\\\"inputFile\\\" (change)=\\\"onFileChange($event)\\\" #fileInput>\\n  </div>\\n  <div class=\\\"col-sm-1\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"clearFile()\\\">clear file</button>\\n    </div>\\n</div>\\n\\n<div class=\\\"form-group row\\\">\\n  <label class=\\\"col-sm-2 col-form-label\\\">Default test set</label>\\n  <div class=\\\"col-sm-4\\\">\\n    <select class=\\\"form-control\\\" (change)=\\\"onChangeTestSet($event.target.value)\\\">\\n      <option *ngFor=\\\"let testSet of testSets\\\" [value]=\\\"testSet.name\\\">{{testSet.name}}</option>\\n    </select>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sudoku-load/sudoku-load.component.html\n// module id = ./src/app/sudoku-load/sudoku-load.component.html\n// module chunks = 1","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { ITxt } from '../sudoku.interface';\nimport { testMockSets } from '../sudoku.mock';\n\n@Component({\n  selector: 'app-sudoku-load',\n  templateUrl: './sudoku-load.component.html',\n  styleUrls: ['./sudoku-load.component.css']\n})\nexport class SudokuLoadComponent {\n  @ViewChild('fileInput') fileInput: ElementRef;\n  @Output() outputEvent = new EventEmitter<ITxt>();\n  testSets: Array<ITxt> = [];\n  constructor() {\n    this.testSets = testMockSets;\n  }\n\n  onFileChange(event) {\n    const that = this;\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      reader.readAsText(file);\n      reader.onload = () => {\n        const txt = reader.result;\n        // debugger;\n        that.extractData(txt, 'Uploaded file');\n      };\n    }\n  }\n\n  // export interface ICSV {\n  //   csvRows: Array<Array<string>>;\n  // }\n  // extractData(csvFile) {\n  //   const csvData = csvFile;\n  //   const allTextLines = csvData.split(/\\r\\n|\\n/);\n  //   const headers = allTextLines[0].split(',');\n  //   // tslint:disable-next-line:prefer-const\n  //   let csv: ICSV = {csvRows: []};\n  //   for (let i = 0; i < allTextLines.length; i++) {\n  //     // split content based on comma\n  //     const data = allTextLines[i].split(',');\n  //     if (data.length === headers.length) {\n  //       // tslint:disable-next-line:prefer-const\n  //       let csvRow = [] as Array<string>;\n  //       for (let j = 0; j < headers.length; j++) {\n  //         // const ss: string = data[j];\n  //         // const sss = ss.match(/.{1,1}/g);\n  //         csvRow.push(data[j]);\n  //       }\n  //       csv.csvRows.push(csvRow);\n  //     }\n  //   }\n\n  extractData(txtFile: string, fileName: string) {\n    const allTextLines = txtFile.split(/\\r\\n|\\n/);\n    // tslint:disable-next-line:prefer-const\n    let txt: ITxt = { name: fileName, txtRows: [] };\n    for (let i = 0; i < allTextLines.length; i++) {\n      txt.txtRows.push(allTextLines[i]);\n    }\n    // debugger;\n    this.outputEvent.emit(txt);\n  }\n\n  clearFile() {\n    this.fileInput.nativeElement.value = '';\n    this.outputEvent.emit(null);\n  }\n\n  public onChangeTestSet(testSetName: string): void {\n    const testSet = testMockSets.find(t => t.name === testSetName);\n    this.fileInput.nativeElement.value = '';\n    this.outputEvent.emit(testSet);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sudoku-load/sudoku-load.component.ts","import { ITxt } from './sudoku.interface';\r\n\r\nexport class TestNames {\r\n  static  Null = 'Null';\r\n  static  WrongRowsNumber = 'Wrong number of rows';\r\n  static  WrongColumnsNumber = 'Wrong number of columns';\r\n  static  RowContanitsNotDigitSymbol = 'A row contanits not a digit symbol';\r\n  static  RowContanitsNotSupportedDigit = 'A row contanits not supported digit';\r\n  static  NotValidSet = 'Not Valid Set';\r\n  static  ValidSet = 'Valid Set';\r\n}\r\n\r\nexport const testMockSets: Array<ITxt> = [\r\n  {\r\n    name: TestNames.Null,\r\n    txtRows: []\r\n  },\r\n  {\r\n    name: TestNames.ValidSet,\r\n    txtRows: [\r\n      '534678912',\r\n      '672195348',\r\n      '198342567',\r\n      '859761423',\r\n      '426853791',\r\n      '713924856',\r\n      '961537284',\r\n      '287419635',\r\n      '345286179'\r\n    ]\r\n  },\r\n\r\n  {\r\n    name: TestNames.NotValidSet,\r\n    txtRows: [\r\n      '534678913',\r\n      '672195348',\r\n      '198342567',\r\n      '859761423',\r\n      '426853791',\r\n      '713924856',\r\n      '961537284',\r\n      '287419635',\r\n      '345286179'\r\n    ]\r\n  },\r\n  {\r\n    name: TestNames.RowContanitsNotSupportedDigit,\r\n    txtRows: [\r\n      '504678912',\r\n      '670195348',\r\n      '198042567',\r\n      '859761423',\r\n      '426853791',\r\n      '713924856',\r\n      '961537284',\r\n      '287419635',\r\n      '345286179'\r\n    ]\r\n  },\r\n\r\n  {\r\n    name: TestNames.WrongRowsNumber,\r\n    txtRows: ['534678913', '672195348']\r\n  },\r\n  {\r\n    name: TestNames.WrongColumnsNumber,\r\n    txtRows: [\r\n      '5346789122',\r\n      '672195348',\r\n      '1983425672',\r\n      '85976123',\r\n      '426853791',\r\n      '713924856',\r\n      '961537284',\r\n      '287419635',\r\n      '345286179'\r\n    ]\r\n  },\r\n  {\r\n    name: TestNames.RowContanitsNotDigitSymbol,\r\n    txtRows: [\r\n      '534678912',\r\n      '672195348',\r\n      '198342567',\r\n      '85976123+',\r\n      '426853791',\r\n      '713924856',\r\n      '961537284',\r\n      '287419635',\r\n      '345286179'\r\n    ]\r\n  }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sudoku.mock.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sudoku-row {\\r\\n  display: inline-block;\\r\\n}\\r\\n.sudoku-row-separator {\\r\\n  border-bottom: 2px solid black;\\r\\n}\\r\\n.sudoku-cell {\\r\\n  border: 0.5px solid black;\\r\\n  padding: 5px 9px;\\r\\n}\\r\\n.sudoku-cell-separator {\\r\\n  border-right: 2px solid black;\\r\\n}\\r\\n.sudoku-cell-not-valid{\\r\\n  background-color: darksalmon;\\r\\n}\\r\\n.sudoku-result-not-valid{\\r\\n  color: red;\\r\\n}\\r\\n.sudoku-result-valid{\\r\\n  color: green;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sudoku/sudoku.component.css\n// module id = ./src/app/sudoku/sudoku.component.css\n// module chunks = 1","module.exports = \"<!-- <div class=\\\"panel\\\">\\n  <div>Using only core C# or Java or JavaScript language (no open-source libraries) write a method that takes in a file as input\\n    and returns true or false whether the contents of the file is a valid solution to a Sudoku puzzle.</div>\\n  <div>The solution should handle exception scenarios.</div>\\n  <div>(You can create additional classes as necessary. Please keep all classes in same solution. Also include unit tests and\\n    test case files used.)</div>\\n  <a href=\\\"https://en.wikipedia.org/wiki/Sudoku\\\" target=\\\"_blank\\\">https://en.wikipedia.org/wiki/Sudoku</a>\\n\\n</div> -->\\n\\n<div class=\\\"container\\\">\\n\\n  <app-sudoku-load (outputEvent)=\\\"onOutputEvent($event)\\\"></app-sudoku-load>\\n\\n  <div class=\\\"form-group row\\\" *ngIf=\\\"testResults && testResults.length>0\\\">\\n    <label class=\\\"col-sm-2 col-form-label\\\">Test Results</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <div *ngFor=\\\"let testResult of testResults\\\">\\n        <div class=\\\"sudoku-result-not-valid\\\">{{testResult}}</div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\" *ngIf=\\\"testResults && testResults.length===0\\\">\\n    <label class=\\\"col-sm-2 col-form-label\\\">Test Results</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <div class=\\\"sudoku-result-valid\\\">Is Valid</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\" *ngIf=\\\"txtBox && txtBox.txtRows.length<10 && sudokuBox.length===0\\\">\\n    <div *ngFor=\\\"let row of txtBox.txtRows; let i=index\\\">\\n      <div>#{{i+1}}: {{row}}</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\" *ngIf=\\\"sudokuBox.length>0\\\">\\n    <div *ngFor=\\\"let row of [0,1,2,3,4,5,6,7,8]; let rowIndex=index\\\">\\n      <div class=\\\"sudoku-row\\\" *ngFor=\\\"let cell of [0,1,2,3,4,5,6,7,8]; let cellIndex=index\\\" [ngClass]=\\\"rowIndex===2||rowIndex===5?'sudoku-row-separator':''\\\">\\n        <div class=\\\"sudoku-cell\\\" [ngClass]=\\\"[cellIndex===2||cellIndex===5?'sudoku-cell-separator':'' , sudokuBox[rowIndex][cellIndex].isValid?'':'sudoku-cell-not-valid']\\\">\\n          <div> {{sudokuBox[rowIndex][cellIndex].value}}</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sudoku/sudoku.component.html\n// module id = ./src/app/sudoku/sudoku.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { ITxt, ICell } from '../sudoku.interface';\n\n@Component({\n  selector: 'app-sudoku',\n  templateUrl: './sudoku.component.html',\n  styleUrls: ['./sudoku.component.css']\n})\nexport class SudokuComponent implements OnInit {\n  txtBox: ITxt;\n  testResults: Array<string> = [];\n  sudokuBox: ICell[][] = [];\n  constructor() {}\n\n  ngOnInit() {}\n\n  onOutputEvent(txt?: ITxt) {\n    this.txtBox = null;\n    this.testResults = [];\n    this.sudokuBox = [];\n    if (txt) {\n      this.txtBox = txt;\n      this.toValidateTextBox(txt);\n      this.sudokuBox = this.mapTxtBoxToSudokuBox(txt);\n      this.toValidateSudokuBox(this.sudokuBox);\n    }\n  }\n\n  toValidateTextBox(txt: ITxt): boolean {\n    const prefix = 'the tested file ';\n    if (txt.txtRows.length !== 9) {\n      this.testResults.push(\n        `${prefix} must includes 9 rows. The actual length is ${\n          txt.txtRows.length\n        }`\n      );\n    }\n    if (this.testResults.length === 0) {\n      txt.txtRows.forEach((row, intex) => {\n        const rowlength: number = row.trim().length;\n        if (rowlength !== 9) {\n          this.testResults.push(\n            `${prefix} line # ${intex +\n              1} must includes 9 bytes. The actual size is ${rowlength}`\n          );\n        }\n      });\n    }\n    if (this.testResults.length === 0) {\n      txt.txtRows.forEach((row, intex) => {\n        const notDigitBytes: string = row.trim().replace(/[0-9]/g, '');\n        // const isnum = /^\\d+$/.test(row);\n        if (notDigitBytes.length > 0) {\n          this.testResults.push(\n            `${prefix} line # ${intex +\n              1} must includes ONLY digits. The actual line includes: ${notDigitBytes}`\n          );\n        }\n      });\n    }\n    return this.testResults.length === 0;\n  }\n\n  toValidateSudokuBox(sudokuBox: ICell[][]): boolean {\n    if (this.testResults.length > 0) {\n      return false;\n    }\n\n    const mustExistNumbers: Array<number> = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const getArrayColumn = (arr, n) => arr.map(x => x[n]);\n    const sudokuBoxSize = 9;\n    if (this.testResults.length === 0 && this.sudokuBox.length === 9) {\n      this.sudokuBox.forEach((row, rowIndex) => {\n        row.forEach((cell, cellIndex) => {\n          if (\n            !mustExistNumbers.includes(\n              this.sudokuBox[rowIndex][cellIndex].value\n            )\n          ) {\n            const cellValue = this.sudokuBox[rowIndex][cellIndex].value;\n            this.sudokuBox[rowIndex][cellIndex].isValid = false;\n            this.testResults.push(\n              `the cell in row (${rowIndex + 1}) column (${cellIndex +\n                1}) with value ${cellValue} must be in array [1, 2, 3, 4, 5, 6, 7, 8, 9]`\n            );\n          }\n        });\n      });\n    }\n\n    if (this.testResults.length === 0 && this.sudokuBox.length === 9) {\n      mustExistNumbers.forEach((mustExistNumber, index) => {\n        this.sudokuBox.forEach((row, rowIndex) => {\n          const fiteredCells: Array<ICell> = row.filter((cell, cellIndex) => {\n            return cell.value === mustExistNumber;\n          });\n          if (fiteredCells.length > 1) {\n            fiteredCells.forEach(wrongCell => {\n              wrongCell.isValid = false;\n            });\n            this.testResults.push(\n              `multiple cells in the row (${rowIndex +\n                1}) have the same value ${mustExistNumber}`\n            );\n          }\n        });\n\n        for (let columnIndex = 0; columnIndex < sudokuBoxSize; columnIndex++) {\n          // debugger;\n          const columnArray = getArrayColumn(this.sudokuBox, columnIndex);\n\n          const fiteredCells: Array<ICell> = columnArray.filter(\n            (cell, cellIndex) => {\n              return cell.value === mustExistNumber;\n            }\n          );\n          if (fiteredCells.length > 1) {\n            fiteredCells.forEach(wrongCell => {\n              wrongCell.isValid = false;\n            });\n            this.testResults.push(\n              `multiple cells in the column (${columnIndex +\n                1}) have the same value ${mustExistNumber}`\n            );\n          }\n        }\n      });\n    }\n\n    return this.testResults.length === 0;\n  }\n\n  mapTxtBoxToSudokuBox(txt: ITxt): ICell[][] {\n    if (this.testResults.length > 0) {\n      return [];\n    }\n    const box: ICell[][] = [];\n    txt.txtRows.forEach((row, rowIndex) => {\n      row = row.trim();\n      box[rowIndex] = [];\n      // debugger;\n      for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {\n        const cellValue: number = +row.charAt(cellIndex);\n        box[rowIndex][cellIndex] = { value: cellValue, isValid: true };\n      }\n    });\n    return box;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sudoku/sudoku.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n.bootstrapModule(AppModule)\n.catch(err => console.error(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}